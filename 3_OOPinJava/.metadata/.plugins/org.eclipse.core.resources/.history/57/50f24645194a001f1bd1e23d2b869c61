package myChallenges;

import java.util.*;
import de.fhpotsdam.unfolding.UnfoldingMap;
import de.fhpotsdam.unfolding.geo.Location;
import de.fhpotsdam.unfolding.data.Feature;
import de.fhpotsdam.unfolding.data.PointFeature;
import de.fhpotsdam.unfolding.marker.SimplePointMarker;
import de.fhpotsdam.unfolding.marker.Marker;
import de.fhpotsdam.unfolding.providers.Google;
import de.fhpotsdam.unfolding.utils.MapUtils;
import processing.core.PApplet;

public class EarthQuakeCityMap extends PApplet {
	private UnfoldingMap map;
	
	public void setup() {
		size(950, 600, OPENGL);
		map = new UnfoldingMap(this, 200, 50, 700, 500, new Google.GoogleMapProvider());
		map.zoomToLevel(2);
		MapUtils.createDefaultEventDispatcher(this, map);
		Location valLoc = new Location(-38.14f, -73.03f);
		
		// using PointFeature/Feature class for additional data and List to store locations
		List<PointFeature> bigEqs = new ArrayList<PointFeature>();
		List<Marker> markers = new ArrayList<Marker>();
		// iterate through the PointFeature list
		for (PointFeature eq : bigEarthQuakes) {
			markers.add(new SimplePointMarker(eq.getLocation(), eq.getProperties()));			
		}
		map.addMarkers(markers);
		PointFeature valEq = new PointFeature(valLoc);
		valEq.addProperty("title",  "Valdiva, Chile");
		valEq.addProperty("magnitude",  "9.5");
		valEq.addProperty("date",  "May 22, 1960");
		valEq.addProperty("year",  "1960");
		bigEqs.add(valEq);
		Marker valMk = new SimplePointMarker(valLoc, valEq.getProperties());
		
		SimplePointMarker val = new SimplePointMarker(valLoc);
		// using Marker interface instead
//		Marker val2 = new SimplePointMarker(valLoc);
		map.addMarker(val);
//		map.addMarker(val2);
		map.addMarker(valMk);
	}
	
	public void draw() {
		background(10);
		map.draw();
//		addKey();		
	}
}