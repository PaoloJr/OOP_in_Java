#BlueJ class context
comment0.target=CSVMax
comment1.params=parser
comment1.target=org.apache.commons.csv.CSVRecord\ hottestHourInFile(org.apache.commons.csv.CSVParser)
comment10.params=
comment10.target=void\ testFileWithColdestTemperature()
comment11.params=currentRow\ lowestSoFar
comment11.target=org.apache.commons.csv.CSVRecord\ getLowestHumOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment12.params=parser
comment12.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment13.params=
comment13.target=void\ testLowestHumidityInFile()
comment2.params=
comment2.target=void\ testHottestInDay()
comment3.params=
comment3.target=org.apache.commons.csv.CSVRecord\ hottestInManyDays()
comment4.params=currentRow\ largestSoFar
comment4.target=org.apache.commons.csv.CSVRecord\ getLargestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment5.params=
comment5.target=void\ testHottestInManyDays()
comment6.params=parser
comment6.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment7.params=
comment7.target=void\ testColdestHourInFile()
comment8.params=currentRow\ lowestSoFar
comment8.target=org.apache.commons.csv.CSVRecord\ getLowestOfTwo(org.apache.commons.csv.CSVRecord,\ org.apache.commons.csv.CSVRecord)
comment9.params=
comment9.target=java.lang.String\ fileWithColdestTemperature()
numComments=14
